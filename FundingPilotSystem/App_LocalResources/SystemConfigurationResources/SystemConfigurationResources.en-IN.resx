<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllowReusePasswordFromHistory" xml:space="preserve">
    <value>Allow password reuse from history</value>
  </data>
  <data name="DefaultEmailAddress" xml:space="preserve">
    <value>Default email address</value>
  </data>
  <data name="EmailAccountPassword" xml:space="preserve">
    <value>Email account password</value>
  </data>
  <data name="EmailAccountUserName" xml:space="preserve">
    <value>Email acccount username</value>
  </data>
  <data name="EmailNotificationAccount" xml:space="preserve">
    <value>Email notification account</value>
  </data>
  <data name="lblAddNewPage" xml:space="preserve">
    <value>Add new page</value>
  </data>
  <data name="lblCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="lblCulture" xml:space="preserve">
    <value>Culture</value>
  </data>
  <data name="lblCustomizeStaticContents" xml:space="preserve">
    <value>Customize the static contents</value>
  </data>
  <data name="lblDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="lblEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="lblFooterTemplate" xml:space="preserve">
    <value>Footer template</value>
  </data>
  <data name="lblHeaderTemplate" xml:space="preserve">
    <value>Header template</value>
  </data>
  <data name="lblKey" xml:space="preserve">
    <value>Key</value>
  </data>
  <data name="lblLeftBarTemplate" xml:space="preserve">
    <value>Left bar template</value>
  </data>
  <data name="lblManageStaticHTMLPage" xml:space="preserve">
    <value>Manage static html page</value>
  </data>
  <data name="lblModule" xml:space="preserve">
    <value>Module</value>
  </data>
  <data name="lblNewValue" xml:space="preserve">
    <value>New Value</value>
  </data>
  <data name="lblResourceConfiguration" xml:space="preserve">
    <value>Resource Configuration</value>
  </data>
  <data name="lblRightBarTemplate" xml:space="preserve">
    <value>Right bar template</value>
  </data>
  <data name="lblSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="lblSaveStaticHTMLPages" xml:space="preserve">
    <value>Save static html pages</value>
  </data>
  <data name="lblValue" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="ProcessEmailTemplates" xml:space="preserve">
    <value>Process Email Templates</value>
  </data>
  <data name="MasterConfiguration" xml:space="preserve">
    <value>Master Configuration</value>
  </data>
  <data name="MaxLogonRetry" xml:space="preserve">
    <value>Maximum logon retry</value>
  </data>
  <data name="MaxPasswordLife" xml:space="preserve">
    <value>Maximum password life (in days)</value>
  </data>
  <data name="MinPasswordLength" xml:space="preserve">
    <value>Minimum password length</value>
  </data>
  <data name="ListProcessEmailTemplateConfigurationsHeader" xml:space="preserve">
    <value>List Process Email Template Configurations</value>
  </data>
  <data name="msgConfirmResourceFileCreation" xml:space="preserve">
    <value>The resource file for the selected module does not exist.Do you want to create it ?</value>
  </data>
  <data name="msgErrorInResourceFileCreation" xml:space="preserve">
    <value>Resources cannot be created there is no default resource file created yet.</value>
  </data>
  <data name="Process" xml:space="preserve">
    <value>Process</value>
  </data>
  <data name="AddNewProcessEmailTemplate" xml:space="preserve">
    <value>Add New Process Email Template</value>
  </data>
  <data name="EmailContent" xml:space="preserve">
    <value>Email Content</value>
  </data>
  <data name="EditProcessEmailTemplate" xml:space="preserve">
    <value>Edit Process Email Template</value>
  </data>
  <data name="OutgoingEmailServer" xml:space="preserve">
    <value>Outgoing email server</value>
  </data>
  <data name="PasswordConfiguration" xml:space="preserve">
    <value>Password Configuration</value>
  </data>
  <data name="PasswordHistoryCount" xml:space="preserve">
    <value>Password history count</value>
  </data>
  <data name="RequireNumberInPassword" xml:space="preserve">
    <value>Require number in password</value>
  </data>
  <data name="RequireSpecialCharacterInPassword" xml:space="preserve">
    <value>Require special character in password</value>
  </data>
  <data name="SenderEmailAddress" xml:space="preserve">
    <value>Sender email address</value>
  </data>
  <data name="ValidationRequiredMaxPasswordLife" xml:space="preserve">
    <value>Please enter maximum password life.</value>
  </data>
  <data name="ValidationRequiredMinPasswordLength" xml:space="preserve">
    <value>Please enter minimum password length.</value>
  </data>
  <data name="ValidationRequiredOutgoingEmailServer" xml:space="preserve">
    <value>Please enter outgoing email server.</value>
  </data>
  <data name="ValidationRequiredValidEmailAddress" xml:space="preserve">
    <value>Please enter valid email address.</value>
  </data>
  <data name="BottomFrameHtml" xml:space="preserve">
    <value>Bottom frame html</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="LeftFrameHtml" xml:space="preserve">
    <value>Left frame html</value>
  </data>
  <data name="RightFrameHtml" xml:space="preserve">
    <value>Right frame html</value>
  </data>
  <data name="TopFrameHtml" xml:space="preserve">
    <value>Top frame html</value>
  </data>
  <data name="ValidationRequiredMaxLogonRetry" xml:space="preserve">
    <value>Please enter maximum login retry.</value>
  </data>
  <data name="ValidationRequiredPasswordHistoryCount" xml:space="preserve">
    <value>Please enter password history count.</value>
  </data>
  <data name="LocalizationSettings" xml:space="preserve">
    <value>Localization Settings</value>
  </data>
  <data name="ResourceFileSavedSuccessfully" xml:space="preserve">
    <value>Resource file saved successfully.</value>
  </data>
  <data name="OnlyHtmlFileSupported" xml:space="preserve">
    <value>Only html file is supported</value>
  </data>
</root>