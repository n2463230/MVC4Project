//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FundingPilotSystem.Services.FPConfigurationService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FundingPilotSystem.Services.FPConfigurationService.IFPConfigurationService")]
    public interface IFPConfigurationService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFPConfigurationService/GetAllPageSpecificPlaceholderConfig", ReplyAction="http://tempuri.org/IFPConfigurationService/GetAllPageSpecificPlaceholderConfigRes" +
            "ponse")]
        System.Collections.Generic.List<FundingPilotSystem.VM.PageSpecificPlaceholderConfigVM> GetAllPageSpecificPlaceholderConfig();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFPConfigurationService/GetAllPageSpecificPlaceholderConfig", ReplyAction="http://tempuri.org/IFPConfigurationService/GetAllPageSpecificPlaceholderConfigRes" +
            "ponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FundingPilotSystem.VM.PageSpecificPlaceholderConfigVM>> GetAllPageSpecificPlaceholderConfigAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFPConfigurationService/DeletePageSpecificPlaceholderConfig", ReplyAction="http://tempuri.org/IFPConfigurationService/DeletePageSpecificPlaceholderConfigRes" +
            "ponse")]
        bool DeletePageSpecificPlaceholderConfig(int pageSpecificPlaceholderId, FundingPilotSystem.Common.SolutionEnums.PageSpecificPlaceholder pageSpecificPlaceholder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFPConfigurationService/DeletePageSpecificPlaceholderConfig", ReplyAction="http://tempuri.org/IFPConfigurationService/DeletePageSpecificPlaceholderConfigRes" +
            "ponse")]
        System.Threading.Tasks.Task<bool> DeletePageSpecificPlaceholderConfigAsync(int pageSpecificPlaceholderId, FundingPilotSystem.Common.SolutionEnums.PageSpecificPlaceholder pageSpecificPlaceholder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFPConfigurationService/SavePageSpecificPlaceholder", ReplyAction="http://tempuri.org/IFPConfigurationService/SavePageSpecificPlaceholderResponse")]
        int SavePageSpecificPlaceholder(FundingPilotSystem.VM.PageSpecificPlaceholderConfigVM pageSpecificPlaceholderConfigVM);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFPConfigurationService/SavePageSpecificPlaceholder", ReplyAction="http://tempuri.org/IFPConfigurationService/SavePageSpecificPlaceholderResponse")]
        System.Threading.Tasks.Task<int> SavePageSpecificPlaceholderAsync(FundingPilotSystem.VM.PageSpecificPlaceholderConfigVM pageSpecificPlaceholderConfigVM);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFPConfigurationService/UpdateEmailQueue", ReplyAction="http://tempuri.org/IFPConfigurationService/UpdateEmailQueueResponse")]
        int UpdateEmailQueue(FundingPilotSystem.VM.EmailQueueVM emailQueueVM);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFPConfigurationService/UpdateEmailQueue", ReplyAction="http://tempuri.org/IFPConfigurationService/UpdateEmailQueueResponse")]
        System.Threading.Tasks.Task<int> UpdateEmailQueueAsync(FundingPilotSystem.VM.EmailQueueVM emailQueueVM);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFPConfigurationService/GetPendingEmailQueue", ReplyAction="http://tempuri.org/IFPConfigurationService/GetPendingEmailQueueResponse")]
        System.Collections.Generic.List<FundingPilotSystem.VM.EmailQueueVM> GetPendingEmailQueue();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFPConfigurationService/GetPendingEmailQueue", ReplyAction="http://tempuri.org/IFPConfigurationService/GetPendingEmailQueueResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FundingPilotSystem.VM.EmailQueueVM>> GetPendingEmailQueueAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFPConfigurationService/SaveEmailLog", ReplyAction="http://tempuri.org/IFPConfigurationService/SaveEmailLogResponse")]
        int SaveEmailLog(FundingPilotSystem.VM.EmailLogVM emailLogVM, int emailQueueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFPConfigurationService/SaveEmailLog", ReplyAction="http://tempuri.org/IFPConfigurationService/SaveEmailLogResponse")]
        System.Threading.Tasks.Task<int> SaveEmailLogAsync(FundingPilotSystem.VM.EmailLogVM emailLogVM, int emailQueueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFPConfigurationService/SaveProcessEmailTemplate", ReplyAction="http://tempuri.org/IFPConfigurationService/SaveProcessEmailTemplateResponse")]
        int SaveProcessEmailTemplate(FundingPilotSystem.VM.ProcessEmailTemplateVM processEmailTemplateViewModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFPConfigurationService/SaveProcessEmailTemplate", ReplyAction="http://tempuri.org/IFPConfigurationService/SaveProcessEmailTemplateResponse")]
        System.Threading.Tasks.Task<int> SaveProcessEmailTemplateAsync(FundingPilotSystem.VM.ProcessEmailTemplateVM processEmailTemplateViewModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFPConfigurationService/GetAllProcessEmailTemplate", ReplyAction="http://tempuri.org/IFPConfigurationService/GetAllProcessEmailTemplateResponse")]
        System.Collections.Generic.List<FundingPilotSystem.VM.ProcessEmailTemplateVM> GetAllProcessEmailTemplate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFPConfigurationService/GetAllProcessEmailTemplate", ReplyAction="http://tempuri.org/IFPConfigurationService/GetAllProcessEmailTemplateResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FundingPilotSystem.VM.ProcessEmailTemplateVM>> GetAllProcessEmailTemplateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFPConfigurationService/GetProcessEmailTemplate", ReplyAction="http://tempuri.org/IFPConfigurationService/GetProcessEmailTemplateResponse")]
        FundingPilotSystem.VM.ProcessEmailTemplateVM GetProcessEmailTemplate(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFPConfigurationService/GetProcessEmailTemplate", ReplyAction="http://tempuri.org/IFPConfigurationService/GetProcessEmailTemplateResponse")]
        System.Threading.Tasks.Task<FundingPilotSystem.VM.ProcessEmailTemplateVM> GetProcessEmailTemplateAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFPConfigurationService/GetAllProcess", ReplyAction="http://tempuri.org/IFPConfigurationService/GetAllProcessResponse")]
        System.Collections.Generic.List<FundingPilotSystem.VM.ProcessVM> GetAllProcess();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFPConfigurationService/GetAllProcess", ReplyAction="http://tempuri.org/IFPConfigurationService/GetAllProcessResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<FundingPilotSystem.VM.ProcessVM>> GetAllProcessAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFPConfigurationService/DeleteProcessEmailTemplate", ReplyAction="http://tempuri.org/IFPConfigurationService/DeleteProcessEmailTemplateResponse")]
        bool DeleteProcessEmailTemplate(int processEmailTemplateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFPConfigurationService/DeleteProcessEmailTemplate", ReplyAction="http://tempuri.org/IFPConfigurationService/DeleteProcessEmailTemplateResponse")]
        System.Threading.Tasks.Task<bool> DeleteProcessEmailTemplateAsync(int processEmailTemplateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFPConfigurationService/SaveMasterConfiguration", ReplyAction="http://tempuri.org/IFPConfigurationService/SaveMasterConfigurationResponse")]
        int SaveMasterConfiguration(FundingPilotSystem.VM.MasterConfigurationViewModel masterConfigurationViewModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFPConfigurationService/SaveMasterConfiguration", ReplyAction="http://tempuri.org/IFPConfigurationService/SaveMasterConfigurationResponse")]
        System.Threading.Tasks.Task<int> SaveMasterConfigurationAsync(FundingPilotSystem.VM.MasterConfigurationViewModel masterConfigurationViewModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFPConfigurationService/GetMasterConfiguration", ReplyAction="http://tempuri.org/IFPConfigurationService/GetMasterConfigurationResponse")]
        FundingPilotSystem.VM.MasterConfigurationViewModel GetMasterConfiguration();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFPConfigurationService/GetMasterConfiguration", ReplyAction="http://tempuri.org/IFPConfigurationService/GetMasterConfigurationResponse")]
        System.Threading.Tasks.Task<FundingPilotSystem.VM.MasterConfigurationViewModel> GetMasterConfigurationAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFPConfigurationServiceChannel : FundingPilotSystem.Services.FPConfigurationService.IFPConfigurationService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FPConfigurationServiceClient : System.ServiceModel.ClientBase<FundingPilotSystem.Services.FPConfigurationService.IFPConfigurationService>, FundingPilotSystem.Services.FPConfigurationService.IFPConfigurationService
    {
        
        public FPConfigurationServiceClient()
        {
        }
        
        public FPConfigurationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public FPConfigurationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public FPConfigurationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public FPConfigurationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Collections.Generic.List<FundingPilotSystem.VM.PageSpecificPlaceholderConfigVM> GetAllPageSpecificPlaceholderConfig()
        {
            return base.Channel.GetAllPageSpecificPlaceholderConfig();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FundingPilotSystem.VM.PageSpecificPlaceholderConfigVM>> GetAllPageSpecificPlaceholderConfigAsync()
        {
            return base.Channel.GetAllPageSpecificPlaceholderConfigAsync();
        }
        
        public bool DeletePageSpecificPlaceholderConfig(int pageSpecificPlaceholderId, FundingPilotSystem.Common.SolutionEnums.PageSpecificPlaceholder pageSpecificPlaceholder)
        {
            return base.Channel.DeletePageSpecificPlaceholderConfig(pageSpecificPlaceholderId, pageSpecificPlaceholder);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePageSpecificPlaceholderConfigAsync(int pageSpecificPlaceholderId, FundingPilotSystem.Common.SolutionEnums.PageSpecificPlaceholder pageSpecificPlaceholder)
        {
            return base.Channel.DeletePageSpecificPlaceholderConfigAsync(pageSpecificPlaceholderId, pageSpecificPlaceholder);
        }
        
        public int SavePageSpecificPlaceholder(FundingPilotSystem.VM.PageSpecificPlaceholderConfigVM pageSpecificPlaceholderConfigVM)
        {
            return base.Channel.SavePageSpecificPlaceholder(pageSpecificPlaceholderConfigVM);
        }
        
        public System.Threading.Tasks.Task<int> SavePageSpecificPlaceholderAsync(FundingPilotSystem.VM.PageSpecificPlaceholderConfigVM pageSpecificPlaceholderConfigVM)
        {
            return base.Channel.SavePageSpecificPlaceholderAsync(pageSpecificPlaceholderConfigVM);
        }
        
        public int UpdateEmailQueue(FundingPilotSystem.VM.EmailQueueVM emailQueueVM)
        {
            return base.Channel.UpdateEmailQueue(emailQueueVM);
        }
        
        public System.Threading.Tasks.Task<int> UpdateEmailQueueAsync(FundingPilotSystem.VM.EmailQueueVM emailQueueVM)
        {
            return base.Channel.UpdateEmailQueueAsync(emailQueueVM);
        }
        
        public System.Collections.Generic.List<FundingPilotSystem.VM.EmailQueueVM> GetPendingEmailQueue()
        {
            return base.Channel.GetPendingEmailQueue();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FundingPilotSystem.VM.EmailQueueVM>> GetPendingEmailQueueAsync()
        {
            return base.Channel.GetPendingEmailQueueAsync();
        }
        
        public int SaveEmailLog(FundingPilotSystem.VM.EmailLogVM emailLogVM, int emailQueueId)
        {
            return base.Channel.SaveEmailLog(emailLogVM, emailQueueId);
        }
        
        public System.Threading.Tasks.Task<int> SaveEmailLogAsync(FundingPilotSystem.VM.EmailLogVM emailLogVM, int emailQueueId)
        {
            return base.Channel.SaveEmailLogAsync(emailLogVM, emailQueueId);
        }
        
        public int SaveProcessEmailTemplate(FundingPilotSystem.VM.ProcessEmailTemplateVM processEmailTemplateViewModel)
        {
            return base.Channel.SaveProcessEmailTemplate(processEmailTemplateViewModel);
        }
        
        public System.Threading.Tasks.Task<int> SaveProcessEmailTemplateAsync(FundingPilotSystem.VM.ProcessEmailTemplateVM processEmailTemplateViewModel)
        {
            return base.Channel.SaveProcessEmailTemplateAsync(processEmailTemplateViewModel);
        }
        
        public System.Collections.Generic.List<FundingPilotSystem.VM.ProcessEmailTemplateVM> GetAllProcessEmailTemplate()
        {
            return base.Channel.GetAllProcessEmailTemplate();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FundingPilotSystem.VM.ProcessEmailTemplateVM>> GetAllProcessEmailTemplateAsync()
        {
            return base.Channel.GetAllProcessEmailTemplateAsync();
        }
        
        public FundingPilotSystem.VM.ProcessEmailTemplateVM GetProcessEmailTemplate(int id)
        {
            return base.Channel.GetProcessEmailTemplate(id);
        }
        
        public System.Threading.Tasks.Task<FundingPilotSystem.VM.ProcessEmailTemplateVM> GetProcessEmailTemplateAsync(int id)
        {
            return base.Channel.GetProcessEmailTemplateAsync(id);
        }
        
        public System.Collections.Generic.List<FundingPilotSystem.VM.ProcessVM> GetAllProcess()
        {
            return base.Channel.GetAllProcess();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<FundingPilotSystem.VM.ProcessVM>> GetAllProcessAsync()
        {
            return base.Channel.GetAllProcessAsync();
        }
        
        public bool DeleteProcessEmailTemplate(int processEmailTemplateId)
        {
            return base.Channel.DeleteProcessEmailTemplate(processEmailTemplateId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteProcessEmailTemplateAsync(int processEmailTemplateId)
        {
            return base.Channel.DeleteProcessEmailTemplateAsync(processEmailTemplateId);
        }
        
        public int SaveMasterConfiguration(FundingPilotSystem.VM.MasterConfigurationViewModel masterConfigurationViewModel)
        {
            return base.Channel.SaveMasterConfiguration(masterConfigurationViewModel);
        }
        
        public System.Threading.Tasks.Task<int> SaveMasterConfigurationAsync(FundingPilotSystem.VM.MasterConfigurationViewModel masterConfigurationViewModel)
        {
            return base.Channel.SaveMasterConfigurationAsync(masterConfigurationViewModel);
        }
        
        public FundingPilotSystem.VM.MasterConfigurationViewModel GetMasterConfiguration()
        {
            return base.Channel.GetMasterConfiguration();
        }
        
        public System.Threading.Tasks.Task<FundingPilotSystem.VM.MasterConfigurationViewModel> GetMasterConfigurationAsync()
        {
            return base.Channel.GetMasterConfigurationAsync();
        }
    }
}
